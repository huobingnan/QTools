buildscript {
    dependencies {
        // 引入javafx packager plugin
        classpath 'io.github.fvarrui:javapackager:1.5.1'
    }
}


plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.10'
    id 'org.openjfx.javafxplugin' version '0.0.9'
}

javafx {
    version = "11.0.2"
    modules "javafx.controls", "javafx.fxml"
    targetCompatibility = JavaVersion.VERSION_1_8
}


group 'openq'

version '1.0-SNAPSHOT'

processResources {
    from("/src/main/resource") {
        include "/fxml/**.fxml"
    }
}
repositories {
    //mavenLocal()
    maven {url 'https://maven.aliyun.com/repository/central'}
    mavenCentral()
}

dependencies {
    def javafxVersion = "11.0.2"
    compile "org.jetbrains.kotlin:kotlin-stdlib"

    // https://mvnrepository.com/artifact/org.openjfx/javafx-controls
    implementation group: 'org.openjfx', name: 'javafx-controls', version: javafxVersion

    // https://mvnrepository.com/artifact/junit/junit
    testImplementation group: 'junit', name: 'junit', version: '4.12'

    // https://mvnrepository.com/artifact/org.openjfx/javafx-base
    compile group: 'org.openjfx', name: 'javafx-base', version: javafxVersion

    compile 'org.jfxtras:jmetro:11.6.14'

    // https://mvnrepository.com/artifact/org.jblas/jblas JBLAS 矩阵运算库的支持
    implementation group: 'org.jblas', name: 'jblas', version: '1.2.3'


    // https://mvnrepository.com/artifact/org.openjfx/javafx-graphics
    compile group: 'org.openjfx', name: 'javafx-graphics', version: javafxVersion

    // https://mvnrepository.com/artifact/org.openjfx/javafx-fxml
    compile group: 'org.openjfx', name: 'javafx-fxml', version: javafxVersion
}

// 使用javafx packager plugin
apply plugin: 'io.github.fvarrui.javapackager.plugin'

// Windows平台程序打包发布task
task distributeWindows(type: io.github.fvarrui.javapackager.gradle.PackageTask, dependsOn: build) {
    // mandatory
    mainClass = 'openq.ApplicationMainKt'
    // optional
    bundleJre = false
    generateInstaller = false
    administratorRequired = false
    platform = io.github.fvarrui.javapackager.model.Platform.windows
    additionalResources = []
}

// MacOS平台程序发布
task distributeMacOS(type: io.github.fvarrui.javapackager.gradle.PackageTask, dependsOn: build) {
    mainClass = 'openq.ApplicationMainKt'
    bundleJre = false
    generateInstaller = true
    administratorRequired = true
    platform = io.github.fvarrui.javapackager.model.Platform.mac

}





